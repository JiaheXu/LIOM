#common parameters
imu_topic: "/imu_raw"
laser_topic: "/points_raw"

depth_topic: "/velodyne_cloud_2"
odom_topic:  "/integrated_to_init"
# output_path: "/home/shiboz/visual_odometry/VINS-RGBD"


# point cloud parameter
# odom_frame_id: "world" 
# laser_frame_id: "lidar"
# undistorted_laser_topic: "/points_correct"
mapping_skip_frame: 2
laser_type: 16


scan_registration_voxel_size: 0.1
lidar_correction_noise: 0.01

use_no_motion_prior: false
use_imu_roll_pitch: false

sensor: "velodyne"

# voxelSize: 0.1
blindFront: 0.4
blindBack: -0.7
blindLeft: 0.4
blindRight: -0.4

min_range: 0.5    #<!-- remove too closed points -->
max_range: 130     #<!-- remove too far points -->
provide_point_time: 0

# no smoothing for the drones
smooth_factor: 0.0



# distortion_parameters:
#   k1: -0.2584873454088996
#   k2: 0.06902224346748101
#   p1: -0.0026351932268314617
#   p2: 0.0013005957530675143
# projection_parameters:
#   fx: 363.0748660332031
#   fy: 363.61425668050134
#   cx: 300.7053111357401
#   cy: 264.11700809477105

# Extrinsic parameter between IMU and Camera.
# estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
  # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
# 2  Don't know anything about extrinsic parameters. You don't need to give R,T. We will try to calibrate it. Do some rotation movement at beginning.
#If you choose 0 or 1, you should write down the following matrix.


provide_imu_laser_extrinsic: 1  # 0 means you need to provide both imu-camera and laser-camera extrinsic
                                # 1 means you just need to provide laser-imu extrinsic matrix. 


#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 3.9939570888238808e-03          # accelerometer measurement noise standard deviation. #0.2
gyr_n: 1.5636343949698187e-03         # gyroscope measurement noise standard deviation.     #0.05
acc_w: 6.4356659353532566e-05          # accelerometer bias random work noise standard deviation.  #0.02
gyr_w: 3.5640318696367613e-05       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.80511       # gravity magnitude





# parameter for visual inertial odometry

# #feature traker paprameters
# max_cnt: 150           # max feature number in feature tracking
# min_dist: 15            # min distance between two features
# freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image
# F_threshold: 1.0        # ransac threshold (pixel)
# show_track: 1           # publish tracking image as topic
# equalize: 0             # if image is too dark or light, trun on equalize to find enough features
# fisheye: 0              # if using fisheye, trun on it. A circle mask will be loaded to remove edge noisy points

# #optimization parameters
# max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
# max_num_iterations: 8   # max solver itrations, to guarantee real time
# keyframe_parallax: 10.0 # keyframe selection threshold (pixel)


# #loop closure parameters
# loop_closure: 1                    # start loop closure
# fast_relocalization: 1             # useful in real-time and large project
# load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
# pose_graph_save_path: "/home/shiboz/visual_odometry/VINS-RGBD" # save and load path

# #unsynchronization parameters
# estimate_td: 0                      # online estimate time offset between camera and imu
# td: -0.03                           # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

# #rolling shutter parameters
# rolling_shutter: 0                      # 0: global shutter camera, 1: rolling shutter camera
# rolling_shutter_tr: 0.033               # unit: s. rolling shutter read out time per frame (from data sheet).

# #visualization parameters
# save_image: 0                   # save image in pose graph for visualization prupose; you can close this function by setting 0
# visualize_imu_forward: 0        # output imu forward propogation to achieve low latency and high frequence results
# visualize_camera_size: 0.4      # size of camera marker in RVIZ
